name: FG EPG

on:
  schedule:
    - cron: '0 */4 * * *'  # 每4小时运行一次
  workflow_dispatch:        # 手动触发

concurrency:
  group: update-m3u-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-m3u:
    runs-on: ubuntu-22.04

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 下载并保存 M3U 文件
      - name: Download and process M3U file
        run: |
          set -e

          # 定义 URL 文件路径
          IPTV_FILE="https://raw.githubusercontent.com/Yu0754/IPTV/main/iptv.txt"

          # 提取 M3U URL 和 User-Agent
          echo "Fetching iptv.txt..."
          IPTV_CONTENT=$(curl -sL "$IPTV_FILE" || { echo "Error: Failed to fetch iptv.txt"; exit 1; })

          M3U_URL=$(echo "$IPTV_CONTENT" | awk '/# 全球电视/{getline; print}' | tr -d '\r')
          USER_AGENT=$(echo "$IPTV_CONTENT" | awk '/# USER_AGENT/{getline; print}' | tr -d '\r')

          # 检查是否成功提取 URL 和 User-Agent
          if [ -z "$M3U_URL" ]; then
            echo "Error: Failed to extract M3U URL from iptv.txt" >&2
            exit 1
          fi
          if [ -z "$USER_AGENT" ]; then
            echo "Error: Failed to extract USER_AGENT from iptv.txt" >&2
            exit 1
          fi

          echo "Extracted M3U URL: $M3U_URL"
          echo "Extracted USER_AGENT: $USER_AGENT"

          # 使用 curl 下载 EPG 数据
          echo "Fetching M3U content..."
          EPG_FILE=$(curl -sL -A "$USER_AGENT" "$M3U_URL")
          if [ -z "$EPG_FILE" ]; then
            echo "Failed to fetch EPG data or the content is empty"
            exit 1
          fi

          # 从下载的 EPG 数据中提取 x-tvg-url 的 URL
          X_TVG_URL=$(echo "$EPG_FILE" | grep -i "x-tvg-url" | cut -d '"' -f 2)
          if [ -z "$X_TVG_URL" ]; then
            echo "x-tvg-url not found or is empty"
            exit 1
          fi
          echo "x-tvg-url: $X_TVG_URL"

          # 下载 x-tvg-url 指向的 EPG 数据
          echo "Downloading EPG XML data from $X_TVG_URL..."
          curl -sL -A "$USER_AGENT" "$X_TVG_URL" -o fgepg.xml
          if [ ! -s fgepg.xml ]; then
            echo "Failed to download EPG XML data or the file is empty"
            exit 1
          fi

          # 输出处理的文件内容 (仅输出前10行，防止过长)
          echo "Downloaded fgepg.xml (preview):"
          head -n 10 fgepg.xml

      # 提交并推送更改
      - name: Commit and push changes
        run: |
          set -e
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          # 暂存未提交的更改
          echo "Stashing uncommitted changes..."
          git stash || echo "No changes to stash"

          # 确保无冲突更新
          git pull --rebase origin main || { echo "Error: Git pull failed"; exit 1; }

          # 恢复暂存的更改
          echo "Applying stashed changes..."
          git stash pop || echo "No stashed changes to apply"

          git add fgepg.xml
          git commit -m "Update fgepg.xml on $(date)" || echo "No changes to commit"
          git push origin main || echo "Failed to push changes. Ensure no conflicts exist."
