name: CN Live

on:
  schedule:
    - cron: '0 */2 * * *'  # 每2小时运行一次
  workflow_dispatch:        # 手动触发

concurrency:
  group: update-m3u-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-m3u:
    runs-on: ubuntu-22.04

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 下载 iptv.txt 文件并提取目标 URL 和 USER_AGENT
      - name: Extract target URL and USER_AGENT
        run: |
          set -e

          echo "Fetching iptv.txt from GitHub..."
          IPTV_FILE_URL="https://raw.githubusercontent.com/Yu0754/IPTV/refs/heads/main/iptv.txt"

          IPTV_CONTENT=$(curl -sfL "$IPTV_FILE_URL") || { echo "Error: Failed to fetch iptv.txt"; exit 1; }

          if [ -z "$IPTV_CONTENT" ]; then
            echo "Error: iptv.txt is empty" >&2
            exit 1
          fi

          # 提取目标 URL 和 USER_AGENT
          TARGET_URL=$(echo "$IPTV_CONTENT" | awk '/# 中国电视/{getline; print}' | tr -d '\r')
          USER_AGENT=$(echo "$IPTV_CONTENT" | awk '/# USER_AGENT/{getline; print}' | tr -d '\r')

          if [ -z "$TARGET_URL" ]; then
            echo "Error: Target URL not found in iptv.txt" >&2
            exit 1
          fi
          if [ -z "$USER_AGENT" ]; then
            echo "Error: USER_AGENT not found in iptv.txt" >&2
            exit 1
          fi

          echo "Extracted TARGET_URL: $TARGET_URL"
          echo "Extracted USER_AGENT: $USER_AGENT"

          # 下载 M3U 文件并保存为 cnlive.m3u
          echo "Downloading M3U file..."
          curl -sL -A "$USER_AGENT" "$TARGET_URL" -o cnlive.m3u || { echo "Error: Failed to download M3U file"; exit 1; }

          if [ ! -s cnlive.m3u ]; then
            echo "Error: cnlive.m3u file is empty" >&2
            exit 1
          fi

          # 保留特定内容：开头到CCTV17下一行、#卫视频道到广东珠江下一行
          echo "Filtering M3U content..."
          awk '
            BEGIN { keep = 1 }
            /CCTV17/ { print; getline; print; keep = 0 }
            /#卫视频道/ { keep = 1 }
            /广东珠江/ { print; getline; print; exit }
            keep { print }
          ' cnlive.m3u > filtered.m3u

          mv filtered.m3u cnlive.m3u

          # 替换 x-tvg-url
          echo "Replacing x-tvg-url with new URL..."
          sed -i 's|x-tvg-url="[^"]*"|x-tvg-url="https://raw.githubusercontent.com/Yu0754/IPTV/main/cnepg.xml"|g' cnlive.m3u

          # 替换 .png 文件的 URL
          echo "Updating .png file URLs..."
          sed -i 's|\(http[^ ]*/\)\([^/]*\.png\)|https://raw.githubusercontent.com/Yu0754/IPTV/main/CN Logo/\2|' cnlive.m3u

          # 确认处理结果
          echo "Processed cnlive.m3u (preview):"
          head -n 20 cnlive.m3u || { echo "Error: Failed to process cnlive.m3u"; exit 1; }

      # 提交并推送更改
      - name: Commit and push changes
        run: |
          set -e
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          # 暂存未提交的更改
          echo "Stashing uncommitted changes..."
          git stash || echo "No changes to stash"

          # 确保无冲突更新
          echo "Pulling latest changes from origin/main..."
          git pull --rebase origin main || { echo "Error: Git pull failed. Please resolve conflicts."; exit 1; }

          # 恢复暂存的更改
          echo "Applying stashed changes..."
          git stash pop || echo "No stashed changes to apply"

          git add cnlive.m3u
          git commit -m "Update cnlive.m3u on $(date)" || echo "No changes to commit"
          git push origin main || { echo "Error: Git push failed. Ensure no conflicts exist."; exit 1; }
