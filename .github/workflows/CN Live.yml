name: CN Live

on:
  schedule:
    - cron: '0 */4 * * *'  # 每4小时运行一次
  workflow_dispatch:        # 手动触发

concurrency:
  group: update-m3u-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-m3u:
    runs-on: ubuntu-22.04

    steps:
    # 检出代码
    - name: Checkout repository
      uses: actions/checkout@v3

    # 下载并处理 M3U 文件
    - name: Download and process M3U file
      run: |
        # 设置互斥锁文件路径
        LOCKFILE="/tmp/update-m3u.lock"

        # 检查是否已有其他实例运行
        if [ -f "$LOCKFILE" ]; then
          echo "Another instance is running. Exiting."
          exit 1
        fi

        # 创建锁文件并设置清理机制
        touch "$LOCKFILE"
        trap "rm -f $LOCKFILE" EXIT

        echo "Fetching iptv.txt from GitHub..."
        IPTV_FILE=$(curl -s https://raw.githubusercontent.com/Yu0754/IPTV/refs/heads/main/iptv.txt)
        echo "iptv.txt content:"
        echo "$IPTV_FILE"

        USER_AGENT=$(echo "$IPTV_FILE" | grep -A 1 "# USER_AGENT" | tail -n 1 | tr -d '\r')
        echo "User-Agent: $USER_AGENT"
        if [ -z "$USER_AGENT" ]; then
          echo "USER_AGENT not found or is empty"
          exit 1
        fi

        # 下载指定 M3U 文件并加时间戳
        TIMESTAMP=$(date +%s)
        INPUT_FILE="ipv6_${TIMESTAMP}.m3u"
        OUTPUT_FILE="cnlive_${TIMESTAMP}.m3u"
        curl -sL -A "$USER_AGENT" https://raw.githubusercontent.com/suxuang/myIPTV/refs/heads/main/ipv6.m3u -o "$INPUT_FILE"

        # 按需求处理文件
        awk '
        BEGIN { 
            section = 1; 
            found_cctv17 = 0; 
            found_guangdong = 0; 
        }
        section == 1 {
            print $0;
            if (/^#EXTINF.*CCTV17/) { 
                found_cctv17 = 1; 
            } 
            if (found_cctv17 && /^http/) { 
                section = 2; 
                next; 
            } 
        }
        /^#卫视频道/ { section = 3 }
        section == 3 {
            print $0;
            if (/^#EXTINF.*广东珠江/) {
                found_guangdong = 1;
            }
            if (found_guangdong && /^http/) { 
                exit; 
            }
        }
        ' "$INPUT_FILE" > "$OUTPUT_FILE"

        sed -i 's|\(http[^ ]*/\)\([^/]*\.png\)|https://raw.githubusercontent.com/Yu0754/IPTV/refs/heads/main/CN Logo/\2|' "$OUTPUT_FILE"
        sed -i 's|x-tvg-url.*|x-tvg-url="https://raw.githubusercontent.com/Yu0754/IPTV/refs/heads/main/cnepg.xml"|' "$OUTPUT_FILE"

        echo "Processed $OUTPUT_FILE:"
        cat "$OUTPUT_FILE"

    # 提交并推送更改
    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add cnlive_*.m3u
        git commit -m "Update CNLIVE.m3u on $(date)" || echo "No changes to commit"

        # 拉取远程分支并合并
        git pull --rebase origin main

        # 推送更改
        git push origin main
